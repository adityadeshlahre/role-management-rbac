FROM node:22-alpine AS base

RUN apk add --no-cache openssl

FROM base AS builder
ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"
# Set working directory
WORKDIR /app
RUN npm install --global pnpm@latest
RUN pnpm add -g turbo
COPY . .
RUN turbo prune --scope=web --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer

ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"

RUN npm install --global pnpm@latest

WORKDIR /app

# First install dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml

RUN corepack enable
RUN pnpm i

COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json

RUN pnpm turbo run build --filter=web...

FROM base AS runner

ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"

RUN npm install --global pnpm@latest

RUN pnpm add -g vite

WORKDIR /app

# COPY --from=installer /app/apps/web/package.json ./package.json

COPY --from=installer /app .
# COPY --from=installer /app/apps/web/dist/ ./dist/

EXPOSE 5173
ENV PORT=5173
ENV HOSTNAME=0.0.0.0
ENV NODE_ENV production

CMD ["sh", "-c", "cd apps/web && pnpm start"]
# CMD ["sh", "-c", "pnpm start"]